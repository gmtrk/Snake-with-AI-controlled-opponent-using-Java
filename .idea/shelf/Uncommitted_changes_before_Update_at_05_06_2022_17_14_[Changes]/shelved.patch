Index: src/Panel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.util.Random;\r\nimport java.util.concurrent.ThreadLocalRandom;\r\n\r\npublic class Panel extends JPanel implements ActionListener {\r\n\r\n    static final int GAME_WIDTH = 800;\r\n    static final int GAME_HEIGHT = 800;\r\n    static final int UNIT_SIZE = 80;\r\n    static final int GAME_UNITS = (GAME_WIDTH*GAME_HEIGHT)/UNIT_SIZE;\r\n    static final int DELAY = 100;\r\n    final int x[] = new int[GAME_UNITS];\r\n    final int y[] = new int[GAME_UNITS];\r\n    int bodyParts = 4;\r\n    int fruitsEaten;\r\n    //coordinates for AI snake\r\n    final int AIx[] = new int[GAME_UNITS];\r\n\r\n    final int AIy[] = new int[GAME_UNITS];\r\n    int AIbodyParts = 5;\r\n    int AIfruitsEaten;\r\n    int fruitX[] = new int [2];\r\n    int newX[] = new int [2];\r\n    int fruitY[] = new int [2];;\r\n    int newY[] = new int [2];;\r\n    char direction = 'R';\r\n    char AIdirection = 'L';\r\n    boolean running = false;\r\n    boolean launched = false;\r\n    boolean hidebutton = false;\r\n    boolean isfruit;\r\n    boolean won = false;\r\n    Timer time;\r\n    Random random;\r\n    Panel(){\r\n        AIx[0] = GAME_WIDTH-UNIT_SIZE;\r\n        AIy[0] = GAME_HEIGHT-UNIT_SIZE;\r\n        random = new Random();\r\n        this.setPreferredSize(new Dimension(GAME_WIDTH,GAME_HEIGHT));\r\n        this.setBackground(Color.CYAN);\r\n        this.setFocusable(true);\r\n        this.addKeyListener(new Adapter());\r\n        startGame();\r\n    }\r\n    public void startGame() {\r\n        newFruit(0);\r\n        newFruit(1);\r\n        time = new Timer(DELAY, this);\r\n        time.start();\r\n\r\n    }\r\n    public void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        draw(g);\r\n    }\r\n    public void draw(Graphics g){\r\n        if(!launched){\r\n            GameMenu(g);\r\n        }\r\n        else{\r\n        if (running) {\r\n            for (int i = 0; i < GAME_HEIGHT / UNIT_SIZE; i++) {\r\n                g.drawLine(i * UNIT_SIZE, 0, i * UNIT_SIZE, GAME_HEIGHT);\r\n                g.drawLine(0, i * UNIT_SIZE, GAME_WIDTH, i * UNIT_SIZE);\r\n            }\r\n            g.setColor(Color.YELLOW);\r\n            g.fillOval(fruitX[0], fruitY[0], UNIT_SIZE, UNIT_SIZE);\r\n            g.fillOval(fruitX[1], fruitY[1], UNIT_SIZE, UNIT_SIZE);\r\n\r\n            for (int i = 0; i < bodyParts; i++) {\r\n                if (i == 0) {\r\n                    g.setColor(Color.GREEN);\r\n                    g.fillRect(x[i], y[i], UNIT_SIZE, UNIT_SIZE);\r\n                } else {\r\n                    g.setColor(new Color(45, 180, 0));\r\n                    g.fillRect(x[i], y[i], UNIT_SIZE, UNIT_SIZE);\r\n                }\r\n            }\r\n            for (int i = 0; i < AIbodyParts; i++) {\r\n                if (i == 0) {\r\n                    g.setColor(Color.RED);\r\n                    g.fillRect(AIx[i], AIy[i], UNIT_SIZE, UNIT_SIZE);\r\n                } else {\r\n                    g.setColor(new Color(180, 45, 0));\r\n                    g.fillRect(AIx[i], AIy[i], UNIT_SIZE, UNIT_SIZE);\r\n                }\r\n            }\r\n            g.setColor(Color.BLACK);\r\n            g.setFont(new Font(\"Arial\",Font.BOLD, 25));\r\n            FontMetrics metrics = getFontMetrics(g.getFont());\r\n            g.drawString(\"Twoj wynik: \" +fruitsEaten, UNIT_SIZE, g.getFont().getSize());\r\n            g.drawString(\"Wynik AI: \" +AIfruitsEaten, 7*UNIT_SIZE, g.getFont().getSize());\r\n        }\r\n        else {\r\n            hidebutton = false;\r\n            if(won){\r\n                GameWon(g);\r\n            }\r\n            else{\r\n            GameOver(g);\r\n        }\r\n        }\r\n    }\r\n    }\r\n    public boolean isTaken(int a, int b){\r\n\r\n        for(int i = 0; i<bodyParts; i++){\r\n            if(x[i] == a)\r\n            {\r\n\r\n                return true;\r\n            }\r\n            if(y[i] == b)\r\n            {\r\n\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    public void newFruit(int fruit){\r\n        newX[fruit] =ThreadLocalRandom.current().nextInt(0,(GAME_WIDTH/UNIT_SIZE))*UNIT_SIZE;\r\n        newY[fruit] =ThreadLocalRandom.current().nextInt(0,(GAME_HEIGHT/UNIT_SIZE))*UNIT_SIZE;\r\n        //nie wier czemu to nie dziala jestem chyba glupi i nie rozumiem pewnych rzeczy\r\n       /* isfruit=isTaken(newX[fruit],newY[fruit]);\r\n        while(isfruit){\r\n            newX[fruit] = ThreadLocalRandom.current().nextInt(0,(GAME_WIDTH/UNIT_SIZE))*UNIT_SIZE;\r\n            newY[fruit] =ThreadLocalRandom.current().nextInt(0,(GAME_HEIGHT/UNIT_SIZE))*UNIT_SIZE;\r\n            isfruit=isTaken(newX[fruit],newY[fruit]);\r\n            if (!isfruit)\r\n            {\r\n            break;\r\n            }\r\n        }*/\r\n        fruitX[fruit] = newX[fruit];\r\n        fruitY[fruit] = newY[fruit];\r\n    }\r\n    public void move() {\r\n        for(int i = bodyParts; i>0; i--){\r\n            x[i] =x[i-1];\r\n            y[i] =y[i-1];\r\n        }\r\n        switch(direction){\r\n            case 'U':\r\n                y[0] = y[0] -UNIT_SIZE;\r\n                break;\r\n            case 'D':\r\n                y[0] = y[0] +UNIT_SIZE;\r\n                break;\r\n            case 'L':\r\n                x[0] = x[0] -UNIT_SIZE;\r\n                break;\r\n            case 'R':\r\n                x[0] = x[0] +UNIT_SIZE;\r\n                break;\r\n        }\r\n\r\n    }\r\n    public void AImove(){\r\n        //dla AI\r\n        for(int i = AIbodyParts; i>0; i--){\r\n            AIx[i] =AIx[i-1];\r\n            AIy[i] =AIy[i-1];\r\n        }\r\n        switch(AIdirection){\r\n            case 'U':\r\n                AIy[0] = AIy[0] -UNIT_SIZE;\r\n                break;\r\n            case 'D':\r\n                AIy[0] = AIy[0] +UNIT_SIZE;\r\n                break;\r\n            case 'L':\r\n                AIx[0] = AIx[0] -UNIT_SIZE;\r\n                break;\r\n            case 'R':\r\n                AIx[0] = AIx[0] +UNIT_SIZE;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public void checkFruit() {\r\n        if((x[0] == fruitX[0]) && (y[0]==fruitY[0])){\r\n            bodyParts++;\r\n            fruitsEaten++;\r\n            newFruit(0);\r\n        }\r\n        if((x[0] == fruitX[1]) && (y[0]==fruitY[1])){\r\n            bodyParts++;\r\n            fruitsEaten++;\r\n            newFruit(1);\r\n        }\r\n        if((AIx[0] == fruitX[0]) && (AIy[0]==fruitY[0])){\r\n            AIbodyParts++;\r\n            AIfruitsEaten++;\r\n            newFruit(0);\r\n        }\r\n        if((AIx[0] == fruitX[1]) && (AIy[0]==fruitY[1])){\r\n            AIbodyParts++;\r\n            AIfruitsEaten++;\r\n            newFruit(1);\r\n        }\r\n    }\r\n    public void checkCollisions() {\r\n        //jezeli waz uderzy w samego siebie\r\n        for(int i = bodyParts; i>0;i--){\r\n            if((x[0] == x[i])&&(y[0] ==y[i])){\r\n                running = false;\r\n            }\r\n        }\r\n        //jezeli waz uderzy w AI\r\n        for(int i = bodyParts; i>0;i--){\r\n            if((x[0] == AIx[i])&&(y[0] ==AIy[i])){\r\n                running = false;\r\n            }\r\n        }\r\n        //jezeli waz uderzy w krawedzie\r\n        if(x[0]<0 || x[0] >= GAME_WIDTH || y[0]<0 || y[0]>=GAME_HEIGHT){\r\n            running = false;\r\n        }\r\n        if (running == false){\r\n            time.stop();\r\n        }\r\n        //jezeli AI waz uderzy w siebie\r\n        for(int i = bodyParts; i>0;i--){\r\n            if((AIx[0] == AIx[i])&&(AIy[0] ==AIy[i])){\r\n                won = true;\r\n                running = false;\r\n            }\r\n        }\r\n        //jezeli AI waz uderzy w gracza\r\n        for(int i = bodyParts; i>0;i--){\r\n            if((AIx[0] == x[i])&&(AIy[0] ==y[i])){\r\n                won = true;\r\n                running = false;\r\n            }\r\n        }\r\n        //jezeli AI waz uderzy w krawedzie\r\n        if(AIx[0]<0 || AIx[0] >= GAME_WIDTH || AIy[0]<0 || AIy[0]>=GAME_HEIGHT){\r\n            won = true;\r\n            running = false;\r\n        }\r\n        if (running == false){\r\n            time.stop();\r\n        }\r\n    }\r\n    public void GameOver(Graphics g) {\r\n        g.setColor(Color.RED);\r\n        g.setFont(new Font(\"Arial\",Font.BOLD, 75));\r\n        FontMetrics metrics = getFontMetrics(g.getFont());\r\n        g.drawString(\"Koniec Gry\", (GAME_WIDTH - metrics.stringWidth(\"Koniec Gry\"))/2, GAME_HEIGHT/2);\r\n\r\n        g.setColor(Color.BLACK);\r\n        g.setFont(new Font(\"Arial\",Font.BOLD, 75));\r\n        FontMetrics metrics1 = getFontMetrics(g.getFont());\r\n        g.drawString(\"Twoj wynik: \" +fruitsEaten, (GAME_WIDTH- metrics1.stringWidth(\"Twoj wynik: \" +fruitsEaten))/2, GAME_HEIGHT-g.getFont().getSize());\r\n\r\n        JButton b = new JButton(\"Restart?\");\r\n        b.setBounds((GAME_WIDTH/2)-75,(GAME_HEIGHT/2)+25,150,50);\r\n        if(!hidebutton) {\r\n            this.add(b);\r\n            hidebutton = true;\r\n        }\r\n        b.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                ResetGame();\r\n                startGame();\r\n                repaint();\r\n                running = true;\r\n                b.setVisible(false);\r\n            }\r\n        });\r\n    }\r\n    public void GameWon(Graphics g) {\r\n        g.setColor(Color.RED);\r\n        g.setFont(new Font(\"Arial\",Font.BOLD, 75));\r\n        FontMetrics metrics = getFontMetrics(g.getFont());\r\n        g.drawString(\"Wygrales\", (GAME_WIDTH - metrics.stringWidth(\"Wygrales\"))/2, GAME_HEIGHT/2);\r\n\r\n        g.setColor(Color.BLACK);\r\n        g.setFont(new Font(\"Arial\",Font.BOLD, 75));\r\n        FontMetrics metrics1 = getFontMetrics(g.getFont());\r\n        g.drawString(\"Twoj wynik: \" +fruitsEaten, (GAME_WIDTH- metrics1.stringWidth(\"Twoj wynik: \" +fruitsEaten))/2, GAME_HEIGHT-g.getFont().getSize());\r\n\r\n        JButton b = new JButton(\"Restart?\");\r\n        b.setBounds((GAME_WIDTH/2)-75,(GAME_HEIGHT/2)+25,150,50);\r\n        if(!hidebutton) {\r\n            this.add(b);\r\n            hidebutton = true;\r\n        }\r\n        b.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                ResetGame();\r\n                startGame();\r\n                repaint();\r\n                running = true;\r\n                b.setVisible(false);\r\n            }\r\n        });\r\n    }\r\n    public void GameMenu(Graphics g) {\r\n        g.setColor(Color.BLACK);\r\n        g.setFont(new Font(\"Arial\",Font.BOLD, 75));\r\n        FontMetrics metrics = getFontMetrics(g.getFont());\r\n        g.drawString(\"Snake na javie\", (GAME_WIDTH - metrics.stringWidth(\"Snake na javie\"))/2, GAME_HEIGHT/2);\r\n        JButton b = new JButton(\"Rozpocznij gre!\");\r\n        b.setBounds((GAME_WIDTH/2)-75,(GAME_HEIGHT/2)+25,150,50);\r\n        if(!hidebutton) {\r\n            this.add(b);\r\n            hidebutton = true;\r\n        }\r\n        b.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                launched = true;\r\n                running = true;\r\n                b.setVisible(false);\r\n            }\r\n        });\r\n\r\n    }\r\n    public void ResetGame(){\r\n        for(int i =0; i<bodyParts; i++){\r\n            x[i] = 0;\r\n            y[i] =0;\r\n        }\r\n        for(int i =0; i<AIbodyParts; i++){\r\n            AIx[i] = GAME_WIDTH-UNIT_SIZE;\r\n            AIy[i] = GAME_HEIGHT-UNIT_SIZE;\r\n        }\r\n        won = false;\r\n        AIbodyParts= 4;\r\n        bodyParts = 4;\r\n        AIfruitsEaten = 0;\r\n        fruitsEaten = 0;\r\n        direction = 'R';\r\n        AIdirection = 'L';\r\n\r\n    }\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        if(running){\r\n            move();\r\n            AImove();\r\n            checkFruit();\r\n            checkCollisions();\r\n        }\r\n        repaint();\r\n    }\r\n\r\n    public class Adapter extends KeyAdapter{\r\n        @Override\r\n        public void keyPressed(KeyEvent e){\r\n            switch(e.getKeyCode()){\r\n                case KeyEvent.VK_LEFT:\r\n                    if(direction!= 'R'){\r\n                        direction = 'L';\r\n                    }\r\n                    break;\r\n                case KeyEvent.VK_RIGHT:\r\n                    if(direction!= 'L'){\r\n                        direction = 'R';\r\n                    }\r\n                    break;\r\n                case KeyEvent.VK_UP:\r\n                    if(direction!= 'D'){\r\n                        direction = 'U';\r\n                    }\r\n                    break;\r\n                case KeyEvent.VK_DOWN:\r\n                    if(direction!= 'U'){\r\n                        direction = 'D';\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Panel.java b/src/Panel.java
--- a/src/Panel.java	(revision 05f8c56fc4a96928d6edb24e70bc4c1ca8de7b69)
+++ b/src/Panel.java	(date 1654361817031)
@@ -8,7 +8,7 @@
 
     static final int GAME_WIDTH = 800;
     static final int GAME_HEIGHT = 800;
-    static final int UNIT_SIZE = 80;
+    static final int UNIT_SIZE = 25;
     static final int GAME_UNITS = (GAME_WIDTH*GAME_HEIGHT)/UNIT_SIZE;
     static final int DELAY = 100;
     final int x[] = new int[GAME_UNITS];
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"81702b40-86d4-4524-aeca-8a3d041e658b\" name=\"Changes\" comment=\"added enemy snake without collision, added second fruit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Panel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Panel.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"29qqELqQ2bfTCNQ1F1xOx513Ykb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Game\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Game\" />\r\n      <module name=\"snaker\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Game\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"81702b40-86d4-4524-aeca-8a3d041e658b\" name=\"Changes\" comment=\"\" />\r\n      <created>1653850852853</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1653850852853</updated>\r\n      <workItem from=\"1653850855293\" duration=\"1565000\" />\r\n      <workItem from=\"1654259270474\" duration=\"15915000\" />\r\n      <workItem from=\"1654348838970\" duration=\"5541000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"added basic snake functionality\">\r\n      <created>1654267180206</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654267180206</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added menu functionality\">\r\n      <created>1654278795386</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654278795386</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"added enemy snake without collision, added second fruit\">\r\n      <created>1654352622136</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654352622136</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"added basic snake functionality\" />\r\n    <MESSAGE value=\"added menu functionality\" />\r\n    <MESSAGE value=\"added enemy snake without collision, added second fruit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"added enemy snake without collision, added second fruit\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 05f8c56fc4a96928d6edb24e70bc4c1ca8de7b69)
+++ b/.idea/workspace.xml	(date 1654362236142)
@@ -4,7 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="81702b40-86d4-4524-aeca-8a3d041e658b" name="Changes" comment="added enemy snake without collision, added second fruit">
+    <list default="true" id="81702b40-86d4-4524-aeca-8a3d041e658b" name="Changes" comment="added AI snake collision and fruit grabbing skills">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Panel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Panel.java" afterDir="false" />
     </list>
@@ -71,7 +71,7 @@
       <updated>1653850852853</updated>
       <workItem from="1653850855293" duration="1565000" />
       <workItem from="1654259270474" duration="15915000" />
-      <workItem from="1654348838970" duration="5541000" />
+      <workItem from="1654348838970" duration="7320000" />
     </task>
     <task id="LOCAL-00001" summary="added basic snake functionality">
       <created>1654267180206</created>
@@ -94,7 +94,14 @@
       <option name="project" value="LOCAL" />
       <updated>1654352622136</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="added AI snake collision and fruit grabbing skills">
+      <created>1654355866396</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1654355866396</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -115,6 +122,7 @@
     <MESSAGE value="added basic snake functionality" />
     <MESSAGE value="added menu functionality" />
     <MESSAGE value="added enemy snake without collision, added second fruit" />
-    <option name="LAST_COMMIT_MESSAGE" value="added enemy snake without collision, added second fruit" />
+    <MESSAGE value="added AI snake collision and fruit grabbing skills" />
+    <option name="LAST_COMMIT_MESSAGE" value="added AI snake collision and fruit grabbing skills" />
   </component>
 </project>
\ No newline at end of file
